*softwrap.txt*         For Vim version 8.2          Last change: 2023 January 21
*SoftWrap*


==============================================================================
CONTENTS                                                      *SoftWrapContents*

        1. Intro .................................... |SoftWrap-intro|
        2. Basic usage ............................. |SoftWrap-basics|
          2.1 Wrap on request ............. |SoftWrap-show-on-request|
          2.2 Always wrap current line ........ |SoftWrap-show-always|
        3. Advanced usage ........................ |SoftWrap-advanced|
        4. Configuration ........................... |SoftWrap-config|
          4.1 Dismiss the popup ..... |g:softwrap_close_popup_mapping|
          4.2 Styling ....................... |SoftWrapHighlightGroup|
          4.3 Unwrapping ................... |g:softwrap_unwrap_popup|
        5. Bugs ...................................... |SoftWrap-bugs|

==============================================================================
1. Intro                                                        *SoftWrap-intro*

Plugin for soft-wrapping current line when |nowrap| is active.

Open a file, |set| |nowrap|, move the cursor to a line long enough that it
finishes beyond the right border of the |window|, `:SoftWrapShow`, and a
|popup| will show the current line wrapped (as if |wrap| was active on the
current line only) over the following lines. Hit <Esc><Esc> (configurable, see
|g:softwrap_close_popup_mapping|) or move the cursor to dismiss the |popup|.

In other words, the plugin exposes the |:SoftWrapShow| command that does two
things:

  1. it shows a |popup| (which will close for any cursor movement) with the
     current line wrapped on itself and the following lines,
  2. and it activates a mapping (|g:softwrap_close_popup_mapping| defaulted to
     <Esc><Esc>) to dismiss that |popup|.

It also gives you a |<Plug>(SoftWrapShow)| mapping, and you can do anything
you want with it. See |SoftWrap-basics| and |SoftWrap-advanced| for a basic
and advanced usage respectively.

You can install the plugin however you want, it doesn't really matter. Anyway,
the plugin is [here][1].
>

==============================================================================
2. Basic usage                                                 *SoftWrap-basics*

------------------------------------------------------------------------------
2.1 Wrap on request                                   *SoftWrap-show-on-request*
                                                                 *:SoftWrapShow*
                                                          *<Plug>(SoftWrapShow)*

Since you probably don't really want to `:SoftWrapShow` manually every time, a
really basic setup is to put, in your |vimrc|, this
>
  nnoremap <silent> <Space><Space> :SoftWrapShow<CR>
<
or this
>
  nmap <silent> <space><space> <Plug>(SoftWrapShow)
<
This way, hitting <Space><Space> in |Normal-mode| will trigger the plugin on
the current line. As already said, hitting <Esc><Esc> or moving the cursor
will dismiss the popup.

Note that if you hit <Space><Space> twice (i.e. <Space><Space><Space><Space>),
i.e. you open 2 popups one on top of the other, then <Esc><Esc> will only
close the one on top, and the other will close only when you move the cursor.

------------------------------------------------------------------------------
2.2 Always wrap current line                              *SoftWrap-show-always*

If you want to always show the current line wrapped, inserting the following
in your |vimrc| should suffice:
>
  augroup SoftWrap
    autocmd!
    autocmd CursorMoved * SoftWrapShow
  augroup END
<

==============================================================================
3. Advanced usage                               *SoftWrapShow* *SoftWrap-advanced*

This is what I have in my |vimrc| (explanation below):
>
  augroup SoftWrap
    autocmd!
    autocmd CursorMoved *
          \ call <SID>enableSoftWrapAutocmdOnCursorHold()
    autocmd CursorMoved vimspector.{Variables,StackTrace,Watches}
          \ SoftWrapShow
    autocmd CursorMoved vimspector.{Variables,StackTrace,Watches}
          \ call autocmd_delete([#{ group: 'ShowSoftWrapOnCursorHold' }])
  augroup END

  function! s:enableSoftWrapAutocmdOnCursorHold()
    augroup ShowSoftWrapOnCursorHold
      autocmd!
      autocmd CursorHold * ++once SoftWrapShow
    augroup END
  endfunction

  function! s:disableSoftWrapAutocmdOnCursorHoldAndShowSoftWrap()
    augroup ShowSoftWrapOnCursorHold
      autocmd!
    augroup END
    SoftWrapShow
  endfunction

  nnoremap <silent> <space><space>
    \ :call <SID>disableSoftWrapAutocmdOnCursorHoldAndShowSoftWrap()<CR>
<
It's not a trivial set up but it allows me to do the following:

  - In the 3 buffers `vimspector.{Variables,StackTrace,Watches}`, the |popup|
    is shown immediately, on |CursorMoved|. This is because those windows
    (created by [vimspector][3]) are narrow, and the lines in them are often
    very long, so it's unlikely I see useful information without seeing the
    whole line.
  - In any other buffer the |popup| is shown on |CursorHold|.
  - In either case, I can dismiss the |popup| via <Esc><Esc>.
  - After <Esc><Esc>, I can show the |popup| again via <Space><Space>.

Note that this suffers the same issue noted at |SoftWrap-show-on-request|.

==============================================================================
4. Configuration                                               *SoftWrap-config*

------------------------------------------------------------------------------
4.1 Dismiss the popup                           *g:softwrap_close_popup_mapping*

|Normal-mode| key combination to dismiss the popup.

Default: <Esc><Esc>


------------------------------------------------------------------------------
4.2 Styling                                             *SoftWrapHighlightGroup*

|Highlight-group| used to style the popup.

If you don't like the default, you can customize the style by defining the
following in your |vimrc| _before_ any |colorscheme| command.
>
  autocmd ColorScheme * highlight SoftWrapHighlighGroup ctermbg=red
<
(Note that you can't customize |ctermfg|, as the |popup| uses the syntax
highlighting of the current line.)

Default:
>
  autocmd ColorScheme
    \ * highlight SoftWrapHighlightGroup ctermbg=NONE ctermfg=NONE cterm=bold
<

------------------------------------------------------------------------------
4.3 Unwrapping                                         *g:softwrap_unwrap_popup*

Setting |g:softwrap_unwrap_popup| to |v:true| the |popup| will |unwrap| the line over
adjacent |windows| (but still |wrap| at screen boundaries, clearly).

Default: |v:false|


==============================================================================
5. Bugs                                                          *SoftWrap-bugs*

I'm fundamentally new to plugin writing (I've written only another one, [2],
but nobody is using it), so I expect this one to be full of bugs. Feel free
to report them, and I'll do what I can to fix it compatibly with the spare
time I have, and depending of whether I agree it's a bug worth fixing.


[1]: https://github.com/Aster89/vim-softwrap
[2]: https://github.com/Aster89/WinZoZ
[3]: https://github.com/puremourning/vimspector

 vim:tw=78:ts=8:noet:ft=help:norl:
