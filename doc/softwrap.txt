*softwrap.txt*	For Vim version 8.2	Last change: 2023 January 12
*SoftWrap*


==============================================================================
CONTENTS                                                      *SoftWrapContents*

    1. Introduction ......................... |SoftWrapIntro|
    2. Configuration ....................... |SoftWrapConfig|
      2.1 Selective activation ........ |g:softwrap_patterns|
      2.2 Dismiss mapping .... |g:softwrap_close_pum_mapping|
      2.3 Styling .................. |SoftWrapHighlightGroup|
      2.4 Unwrapping .................... |g:softwrap_unwrap|


==============================================================================
1. Intro                                                         *SoftWrapIntro*

Plugin for soft-wrapping current line when |nowrap| is active.

Open a file with, |set| |nowrap|, and see what happens when the cursor is on a
line long enough that it finishes beyond the right border of the |window| (or
begins before the left border).
>

==============================================================================
2. Configuration                                                *SoftWrapConfig*

------------------------------------------------------------------------------
2.1 Selective activation                                   *g:softwrap_patterns*

By default |SoftWrap| is active for every buffer, so the soft-wrapping will
occur in any |window| where the cursor happens to be.

To limit the action of the plugin only to those |buffers| that match a given
pattern, the variable |g:softwrap_patterns| can be defined, which will be used
as an |autocmd-pattern| (for the |autocmd| that this plugin uses internally).
For instance, the following will make it active only on the 3 |buffers|
`vimspector.Variables`, `vimspector.StackTrace`, and `vimspector.Watches`:
>
  let g:softwrap_patterns = 'vimspector.{Variables,StackTrace,Watches}'
<
Alternatively, you could define |g:softwrap_patterns| as a list of strings; in
this case, the strings are joined into a comma separated string before being
fed to the |autocmd|. For instance, to activate the plugin only for HTML files
and text files, you could define the setting like this:
>
  let g:softwrap_patterns = ['*.html', '*.txt']
<

Default: `'*'` (plugin active in every buffer)


------------------------------------------------------------------------------
2.2 Dismiss mapping                               *g:softwrap_close_pum_mapping*

|Normal-mode| key combination to dismiss the popup.

Default: '<Esc><Esc>'


------------------------------------------------------------------------------
2.3 Styling                                             *SoftWrapHighlightGroup*

|Highlight-group| used to style the popup.

If you don't like the default, you can customize the style by defining the
following in your |vimrc| _before_ any |colorscheme| command.
>
  autocmd ColorScheme * highlight SoftWrapHighlighGroup ctermbg=red
<
(Note that you can't customize |ctermfg|, as the |popup| uses the syntax
highlighting of the current line.)

Default:
>
  autocmd ColorScheme * highlight SoftWrapHighlightGroup ctermbg=NONE ctermfg=NONE cterm=bold
<

------------------------------------------------------------------------------
2.4 Unwrapping                                               *g:softwrap_unwrap*

Setting |g:softwrap_unwrap| to |v:true| the |popup| will |unwrap| the line over
adjacent |windows| (but still |wrap| at screen boundaries, clearly).

Default: |v:false|


 vim:tw=78:ts=8:noet:ft=help:norl:
